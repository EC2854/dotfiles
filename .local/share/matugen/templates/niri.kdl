cursor {
    xcursor-theme "Bibata-Modern-Classic"
    xcursor-size 24
}
environment {
    QT_QPA_PLATFORM "wayland;xcb"
    QT_QPA_PLATFORMTHEME "qt6ct"
    QT_WAYLAND_DISABLE_WINDOWDECORATION "1"
    DISPLAY ":0"
}
input {
    keyboard {
        xkb {
            layout "pl"
            options "ctrl:nocaps"
        }
        numlock
    }

    // Next sections include libinput settings.
    // Omitting settings disables them, or leaves them at their default values.
    touchpad {
        tap
        // dwt
        // dwtp
        // drag false
        // drag-lock
        natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "two-finger"
        // disabled-on-external-mouse
    }

    mouse {
        // off
        // natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "no-scroll"
    }

    trackpoint {
        // off
        // natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "on-button-down"
        // scroll-button 273
        // middle-emulation
    }

    // Uncomment this to make the mouse warp to the center of newly focused windows.
    warp-mouse-to-focus

    // Focus windows and outputs automatically when moving the mouse into them.
    // Setting max-scroll-amount="0%" makes it work only on windows already fully on screen.
    focus-follows-mouse max-scroll-amount="95%"
}

// You can configure outputs by their name, which you can find
// by running `niri msg outputs` while inside a niri instance.
// The built-in laptop monitor is usually called "eDP-1".
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Outputs
// Remember to uncomment the node by removing "/-"!
output "eDP-1" {
    // off

    // Run `niri msg outputs` while inside a niri instance to list all outputs and their modes.
    mode "1920x1080@60"
    scale 1
    transform "normal"
    position x=0 y=0
}

// Settings that influence how windows are positioned and sized.
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Layout
layout {
    background-color "transparent"
    // Set gaps around windows in logical pixels.
    gaps 4

    // When to center a column when changing focus, options are:
    // - "never", default behavior, focusing an off-screen column will keep at the left
    //   or right edge of the screen.
    // - "always", the focused column will always be centered.
    // - "on-overflow", focusing a column will center it if it doesn't fit
    //   together with the previously focused column.
    always-center-single-column
    center-focused-column "never"

    preset-column-widths {
        proportion 0.5
    }

    // You can also customize the heights that "switch-preset-window-height" (Mod+Shift+R) toggles between.
    // preset-window-heights { }

    // You can change the default width of the new windows.
    default-column-width { proportion 0.5; }
    // If you leave the brackets empty, the windows themselves will decide their initial width.

    // By default focus ring and border are rendered as a solid background rectangle
    // behind windows. That is, they will show up through semitransparent windows.
    // This is because windows using client-side decorations can have an arbitrary shape.
    //
    // If you don't like that, you should uncomment `prefer-no-csd` below.
    // Niri will draw focus ring and border *around* windows that agree to omit their
    // client-side decorations.
    //
    // Alternatively, you can override it with a window rule called
    // `draw-border-with-background`.

    // You can change how the focus ring looks.
    focus-ring {
        off
    }

    // You can also add a border. It's similar to the focus ring, but always visible.
    border {
        width 3
        active-color "{{colors.primary.default.hex}}"
        inactive-color "{{colors.surface_container_highest.default.hex}}"

        // Color of the border around windows that request your attention.
        urgent-color "{{colors.error.default.hex}}"

    }

    shadow {
        on

        // By default, the shadow draws only around its window, and not behind it.
        // Uncomment this setting to make the shadow draw behind its window.
        //
        // Note that niri has no way of knowing about the CSD window corner
        // radius. It has to assume that windows have square corners, leading to
        // shadow artifacts inside the CSD rounded corners. This setting fixes
        // those artifacts.
        // 
        // However, instead you may want to set prefer-no-csd and/or
        // geometry-corner-radius. Then, niri will know the corner radius and
        // draw the shadow correctly, without having to draw it behind the
        // window. These will also remove client-side shadows if the window
        // draws any.
        // 
        draw-behind-window true

        // You can change how shadows look. The values below are in logical
        // pixels and match the CSS box-shadow properties.

        // Softness controls the shadow blur radius.
        softness 30

        // Spread expands the shadow.
        spread 7

        // Offset moves the shadow relative to the window.
        offset x=0 y=5

        // You can also change the shadow color and opacity.
        color "#0007"
    }

    // Struts shrink the area occupied by windows, similarly to layer-shell panels.
    // You can think of them as a kind of outer gaps. They are set in logical pixels.
    // Left and right struts will cause the next window to the side to always be visible.
    // Top and bottom struts will simply add outer gaps in addition to the area occupied by
    // layer-shell panels and regular gaps.
    struts {
        left 4
        right 4
        top 4
        bottom 4
    }
}

// Add lines like this to spawn processes at startup.
// Note that running niri as a session supports xdg-desktop-autostart,
// which may be more convenient to use.
// See the binds section below for more spawn examples.

// This line starts waybar, a commonly used bar for Wayland compositors.

// Uncomment this line to ask the clients to omit their client-side decorations if possible.
// If the client will specifically ask for CSD, the request will be honored.
// Additionally, clients will be informed that they are tiled, removing some client-side rounded corners.
// This option will also fix border/focus ring drawing behind some semitransparent windows.
// After enabling or disabling this, you need to restart the apps for this to take effect.
prefer-no-csd

// You can change the path where screenshots are saved.
// A ~ at the front will be expanded to the home directory.
// The path is formatted with strftime(3) to give you the screenshot date and time.
screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

// You can also set this to null to disable saving screenshots to disk.
// screenshot-path null

// Animation settings.
// The wiki explains how to configure individual animations:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Animations
animations {
    // Uncomment to turn off all animations.
    // off

    // Slow down all animations by this factor. Values below 1 speed them up instead.
    slowdown 0.4
}

// Open the zen picture-in-picture player as floating by default.
window-rule {
    match app-id=r#"^zen$"#
    open-on-workspace "browser"

}
window-rule {
    match app-id=r#"^zen$"# title="^Picture-in-Picture$"
    open-floating true
}
window-rule {
    match title="^*-float$"
    open-floating true
    default-column-width  { fixed 1280; }
    default-window-height { fixed 720; }
}
window-rule {
    match app-id=r#"^io\.missioncenter\.MissionCenter$"#
    match app-id=r#"^org\.gnome\.Nautilus$"#
    match app-id=r#"^org\.pipewire\.Helvum$"#
    match app-id=r#"^com\.saivert\.pwvucontrol$"#

    open-floating true
    default-column-width  { fixed 1280; }
    default-window-height { fixed 720; }
}

window-rule {
    match app-id=r#"^org\.gnome\.Calculator$"#

    open-floating true
    default-column-width  { fixed 400; }
    default-window-height { fixed 656; }
}
window-rule {
    match app-id=r#"^org\.gnome\.World\.Secrets$"#
    block-out-from "screen-capture"
}

// Example: enable rounded corners for all windows.
// (This example rule is commented out with a "/-" in front.)
window-rule {
    geometry-corner-radius 15
    clip-to-geometry true
}

binds {
    // Keys consist of modifiers separated by + signs, followed by an XKB key name
    // in the end. To find an XKB name for a particular key, you may use a program
    // like wev.
    //
    // "Mod" is a special modifier equal to Super when running on a TTY, and to Alt
    // when running as a winit window.
    //
    // Most actions that you can bind here can also be invoked programmatically with
    // `niri msg action do-something`.

    // Mod-Shift-/, which is usually the same as Mod-?,
    // shows a list of important hotkeys.
    Mod+Shift+Slash { show-hotkey-overlay; }

    // Suggested binds for running programs: terminal, app launcher, screen locker.
    Mod+T             hotkey-overlay-title="Open a Terminal: foot"                  { spawn "foot"; }
    Mod+Alt+T         hotkey-overlay-title="Open a Terminal: foot with tmux"        { spawn "foot" "zsh" "-c" "tmux a || tmux"; }
    Mod+Space         hotkey-overlay-title="Run an Application: fuzzel"             { spawn "fuzzel"; }
    Mod+Ctrl+Q        hotkey-overlay-title="Lock the Screen: hyprlock"              { spawn "hyprlock"; }
    Ctrl+Shift+Escape hotkey-overlay-title="Open a System monitor: Mission Control" { spawn "flatpak" "run" "io.missioncenter.MissionCenter"; }

    Mod+W       hotkey-overlay-title="Open a Browser: zen"                   { spawn "flatpak" "run" "app.zen_browser.zen"; }
    Mod+B       hotkey-overlay-title="Open a Password manager: secrets"      { spawn "flatpak" "run" "org.gnome.World.Secrets"; }

    Mod+N       hotkey-overlay-title="Open a Bluetooth manager: bluetui"     { spawn "foot" "--title=bluetui-float" "bluetui"; } 
    Mod+Shift+N hotkey-overlay-title="Open a Network manager: impala"        { spawn "foot" "--title=impala-float" "impala"; } 

    Mod+Shift+D hotkey-overlay-title="Open Discord: vesktop"                 { spawn "flatpak" "run" "dev.vencord.Vesktop"; }
    Mod+D       hotkey-overlay-title="Open Music player: rmpc"               { spawn "foot" "--title=rmpc" "rmpc"; }

    Mod+A       hotkey-overlay-title="Open Audio manager: pwvucontrol"       { spawn "flatpak" "run" "com.saivert.pwvucontrol"; }
    Mod+Shift+A hotkey-overlay-title="Open Audio patchbay: Helvum"           { spawn "flatpak" "run" "org.pipewire.Helvum"; }

    Mod+E       hotkey-overlay-title="Open File manager: lf"                 { spawn "foot" "--title=lf-float" "lf"; }
    Mod+Shift+E hotkey-overlay-title="Open Graphical file manager: nautilus" { spawn "nautilus"; } // not flatpak because its a dependency on xdg-desktop-portal-gnome


    XF86AudioRaiseVolume allow-when-locked=true { spawn "~/.local/share/scripts/volume.sh" "vol" "up"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "~/.local/share/scripts/volume.sh" "vol" "down"; }
    XF86AudioMute        allow-when-locked=true { spawn "~/.local/share/scripts/volume.sh" "vol" "mute"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "~/.local/share/scripts/volume.sh" "mic" "mute"; }

    Mod+P       repeat=false { spawn "~/.local/share/scripts/change_monitor.sh"; }
    XF86Display repeat=false { spawn "~/.local/share/scripts/change_monitor.sh"; }

    // Open/close the Overview: a zoomed-out view of workspaces and windows.
    // You can also move the mouse into the top-left hot corner,
    // or do a four-finger swipe up on a touchpad.
    Mod+Tab repeat=false { toggle-overview; }

    Mod+Q { close-window; }

    Mod+Left  { focus-column-left; }
    Mod+Down  { focus-window-or-workspace-down; }
    Mod+Up    { focus-window-or-workspace-up; }
    Mod+Right { focus-column-right; }
    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-or-workspace-down; }
    Mod+K     { focus-window-or-workspace-up; }
    Mod+L     { focus-column-right; }

    Mod+Shift+Left  { move-column-left; }
    Mod+Shift+Down     { move-window-down-or-to-workspace-down; }
    Mod+Shift+Up     { move-window-up-or-to-workspace-up; }
    Mod+Shift+Right { move-column-right; }
    Mod+Shift+H     { move-column-left; }
    Mod+Shift+J     { move-window-down-or-to-workspace-down; }
    Mod+Shift+K     { move-window-up-or-to-workspace-up; }
    Mod+Shift+L     { move-column-right; }


    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    Mod+Ctrl+Left  { focus-monitor-left; }
    Mod+Ctrl+Down  { focus-monitor-down; }
    Mod+Ctrl+Up    { focus-monitor-up; }
    Mod+Ctrl+Right { focus-monitor-right; }
    Mod+Ctrl+H     { focus-monitor-left; }
    Mod+Ctrl+J     { focus-monitor-down; }
    Mod+Ctrl+K     { focus-monitor-up; }
    Mod+Ctrl+L     { focus-monitor-right; }

    Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
    Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }


    // You can bind mouse wheel scroll ticks using the following syntax.
    // These binds will change direction based on the natural-scroll setting.
    //
    // To avoid scrolling through workspaces really fast, you can use
    // the cooldown-ms property. The bind will be rate-limited to this value.
    // You can set a cooldown on any bind, but it's most useful for the wheel.
    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Shift+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Shift+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Shift+WheelScrollRight { move-column-right; }
    Mod+Shift+WheelScrollLeft  { move-column-left; }

    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+0 { focus-workspace 10; }
    Mod+Shift+1 { move-column-to-workspace 1; }
    Mod+Shift+2 { move-column-to-workspace 2; }
    Mod+Shift+3 { move-column-to-workspace 3; }
    Mod+Shift+4 { move-column-to-workspace 4; }
    Mod+Shift+5 { move-column-to-workspace 5; }
    Mod+Shift+6 { move-column-to-workspace 6; }
    Mod+Shift+7 { move-column-to-workspace 7; }
    Mod+Shift+8 { move-column-to-workspace 8; }
    Mod+Shift+9 { move-column-to-workspace 9; }
    Mod+Shift+0 { move-column-to-workspace 10; }

    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    // Consume one window from the right to the bottom of the focused column.
    Mod+Comma  { consume-window-into-column; }
    // Expel the bottom window from the focused column to the right.
    Mod+Period { expel-window-from-column; }

    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }

    // Expand the focused column to space not taken up by other fully visible columns.
    // Makes the column "fill the rest of the space".
    Mod+Ctrl+F { expand-column-to-available-width; }

    // Finer width adjustments.
    // This command can also:
    // * set width in pixels: "1000"
    // * adjust width in pixels: "-5" or "+5"
    // * set width as a percentage of screen width: "25%"
    // * adjust width as a percentage of screen width: "-10%" or "+10%"
    // Pixel sizes use logical, or scaled, pixels. I.e. on an output with scale 2.0,
    // set-column-width "100" will make the column occupy 200 physical screen pixels.
    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    // Move the focused window between the floating and the tiling layout.
    Mod+Shift+Space       { toggle-window-floating; }
    Mod+Ctrl+Space        { switch-focus-between-floating-and-tiling; }

    // Toggle tabbed column display mode.
    // Windows in this column will appear as vertical tabs,
    // rather than stacked on top of each other.
    Mod+Shift+T { toggle-column-tabbed-display; }

    // Actions to switch layouts.

    Mod+S       { screenshot; }
    Mod+Shift+S { screenshot-screen; }
    Mod+Alt+S   { screenshot-window; }

    Print       { screenshot-window; }
    Shift+Print { screenshot-window; }
    Alt+Print   { screenshot-window; }

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.

    // The quit action will show a confirmation dialog to avoid accidental exits.
    Mod+Escape       { spawn "~/.local/share/scripts/powermenu.sh"; }
    Mod+Shift+Escape { quit; }

    Mod+Shift+Q { power-off-monitors; }
}
gestures {
    hot-corners {
        off
    }
}
layer-rule {
    // Find the right namespace by running niri msg layers.
    match namespace="^swww-daemon$"
    place-within-backdrop true
}

overview {
    zoom 0.6
    workspace-shadow {
        off
    }
}
hotkey-overlay {
    skip-at-startup
}

workspace "dev"
workspace "browser"
workspace "chat"

spawn-at-startup "kanshi"
spawn-at-startup "xwayland-satellite"
